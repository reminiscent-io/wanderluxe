[plugin:vite:react-swc] × the name `cn` is defined multiple times
    ╭─[/home/runner/workspace/src/components/ui/popover.tsx:4:1]
  1 │ import * as React from "react"
  2 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
  3 │ 
  4 │ import { cn } from "@/lib/utils"
    ·          ─┬
    ·           ╰── previous definition of `cn` here
  5 │ 
  6 │ const Popover = PopoverPrimitive.Root
  7 │ 
  8 │ const PopoverTrigger = PopoverPrimitive.Trigger
  9 │ 
 10 │ const PopoverContent = React.forwardRef<
 11 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 12 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 13 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
 14 │   <PopoverPrimitive.Portal>
 15 │     <PopoverPrimitive.Content
 16 │       ref={ref}
 17 │       align={align}
 18 │       sideOffset={sideOffset}
 19 │       className={cn(
 20 │         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 21 │         className
 22 │       )}
 23 │       {...props}
 24 │     />
 25 │   </PopoverPrimitive.Portal>
 26 │ ))
 27 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 28 │ 
 29 │ export { Popover, PopoverTrigger, PopoverContent }
 30 │ import * as React from "react"
 31 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
 32 │ 
 33 │ import { cn } from "@/lib/utils"
    ·          ─┬
    ·           ╰── `cn` redefined here
 34 │ 
 35 │ const Popover = PopoverPrimitive.Root
    ╰────
  × the name `Popover` is defined multiple times
    ╭─[/home/runner/workspace/src/components/ui/popover.tsx:6:1]
  3 │ 
  4 │ import { cn } from "@/lib/utils"
  5 │ 
  6 │ const Popover = PopoverPrimitive.Root
    ·       ───┬───
    ·          ╰── previous definition of `Popover` here
  7 │ 
  8 │ const PopoverTrigger = PopoverPrimitive.Trigger
  9 │ 
 10 │ const PopoverContent = React.forwardRef<
 11 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 12 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 13 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
 14 │   <PopoverPrimitive.Portal>
 15 │     <PopoverPrimitive.Content
 16 │       ref={ref}
 17 │       align={align}
 18 │       sideOffset={sideOffset}
 19 │       className={cn(
 20 │         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 21 │         className
 22 │       )}
 23 │       {...props}
 24 │     />
 25 │   </PopoverPrimitive.Portal>
 26 │ ))
 27 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 28 │ 
 29 │ export { Popover, PopoverTrigger, PopoverContent }
 30 │ import * as React from "react"
 31 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
 32 │ 
 33 │ import { cn } from "@/lib/utils"
 34 │ 
 35 │ const Popover = PopoverPrimitive.Root
    ·       ───┬───
    ·          ╰── `Popover` redefined here
 36 │ 
 37 │ const PopoverTrigger = PopoverPrimitive.Trigger
    ╰────
  × the name `PopoverTrigger` is defined multiple times
    ╭─[/home/runner/workspace/src/components/ui/popover.tsx:8:1]
  5 │ 
  6 │ const Popover = PopoverPrimitive.Root
  7 │ 
  8 │ const PopoverTrigger = PopoverPrimitive.Trigger
    ·       ───────┬──────
    ·              ╰── previous definition of `PopoverTrigger` here
  9 │ 
 10 │ const PopoverContent = React.forwardRef<
 11 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 12 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 13 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
 14 │   <PopoverPrimitive.Portal>
 15 │     <PopoverPrimitive.Content
 16 │       ref={ref}
 17 │       align={align}
 18 │       sideOffset={sideOffset}
 19 │       className={cn(
 20 │         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 21 │         className
 22 │       )}
 23 │       {...props}
 24 │     />
 25 │   </PopoverPrimitive.Portal>
 26 │ ))
 27 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 28 │ 
 29 │ export { Popover, PopoverTrigger, PopoverContent }
 30 │ import * as React from "react"
 31 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
 32 │ 
 33 │ import { cn } from "@/lib/utils"
 34 │ 
 35 │ const Popover = PopoverPrimitive.Root
 36 │ 
 37 │ const PopoverTrigger = PopoverPrimitive.Trigger
    ·       ───────┬──────
    ·              ╰── `PopoverTrigger` redefined here
 38 │ 
 39 │ const PopoverContent = React.forwardRef<
 40 │   React.ElementRef<typeof PopoverPrimitive.Content>,
    ╰────
  × the name `PopoverContent` is defined multiple times
    ╭─[/home/runner/workspace/src/components/ui/popover.tsx:10:1]
  7 │ 
  8 │ const PopoverTrigger = PopoverPrimitive.Trigger
  9 │ 
 10 │ const PopoverContent = React.forwardRef<
    ·       ───────┬──────
    ·              ╰── previous definition of `PopoverContent` here
 11 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 12 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 13 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
 14 │   <PopoverPrimitive.Portal>
 15 │     <PopoverPrimitive.Content
 16 │       ref={ref}
 17 │       align={align}
 18 │       sideOffset={sideOffset}
 19 │       className={cn(
 20 │         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 21 │         className
 22 │       )}
 23 │       {...props}
 24 │     />
 25 │   </PopoverPrimitive.Portal>
 26 │ ))
 27 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 28 │ 
 29 │ export { Popover, PopoverTrigger, PopoverContent }
 30 │ import * as React from "react"
 31 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
 32 │ 
 33 │ import { cn } from "@/lib/utils"
 34 │ 
 35 │ const Popover = PopoverPrimitive.Root
 36 │ 
 37 │ const PopoverTrigger = PopoverPrimitive.Trigger
 38 │ 
 39 │ const PopoverContent = React.forwardRef<
    ·       ───────┬──────
    ·              ╰── `PopoverContent` redefined here
 40 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 41 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 42 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
    ╰────
  × the name `Popover` is exported multiple times
    ╭─[/home/runner/workspace/src/components/ui/popover.tsx:29:1]
 26 │ ))
 27 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 28 │ 
 29 │ export { Popover, PopoverTrigger, PopoverContent }
    ·          ───┬───
    ·             ╰── previous exported here
 30 │ import * as React from "react"
 31 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
 32 │ 
 33 │ import { cn } from "@/lib/utils"
 34 │ 
 35 │ const Popover = PopoverPrimitive.Root
 36 │ 
 37 │ const PopoverTrigger = PopoverPrimitive.Trigger
 38 │ 
 39 │ const PopoverContent = React.forwardRef<
 40 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 41 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 42 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
 43 │   <PopoverPrimitive.Portal>
 44 │     <PopoverPrimitive.Content
 45 │       ref={ref}
 46 │       align={align}
 47 │       sideOffset={sideOffset}
 48 │       className={cn(
 49 │         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none animate-in data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 50 │         className
 51 │       )}
 52 │       {...props}
 53 │     />
 54 │   </PopoverPrimitive.Portal>
 55 │ ))
 56 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 57 │ 
 58 │ export { Popover, PopoverTrigger, PopoverContent }
    ·          ───┬───
    ·             ╰── exported more than once
    ╰────

Advice:   ☞ Exported identifiers must be unique
  × the name `PopoverTrigger` is exported multiple times
    ╭─[/home/runner/workspace/src/components/ui/popover.tsx:29:1]
 26 │ ))
 27 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 28 │ 
 29 │ export { Popover, PopoverTrigger, PopoverContent }
    ·                   ───────┬──────
    ·                          ╰── previous exported here
 30 │ import * as React from "react"
 31 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
 32 │ 
 33 │ import { cn } from "@/lib/utils"
 34 │ 
 35 │ const Popover = PopoverPrimitive.Root
 36 │ 
 37 │ const PopoverTrigger = PopoverPrimitive.Trigger
 38 │ 
 39 │ const PopoverContent = React.forwardRef<
 40 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 41 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 42 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
 43 │   <PopoverPrimitive.Portal>
 44 │     <PopoverPrimitive.Content
 45 │       ref={ref}
 46 │       align={align}
 47 │       sideOffset={sideOffset}
 48 │       className={cn(
 49 │         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none animate-in data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 50 │         className
 51 │       )}
 52 │       {...props}
 53 │     />
 54 │   </PopoverPrimitive.Portal>
 55 │ ))
 56 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 57 │ 
 58 │ export { Popover, PopoverTrigger, PopoverContent }
    ·                   ───────┬──────
    ·                          ╰── exported more than once
    ╰────

Advice:   ☞ Exported identifiers must be unique
  × the name `PopoverContent` is exported multiple times
    ╭─[/home/runner/workspace/src/components/ui/popover.tsx:29:1]
 26 │ ))
 27 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 28 │ 
 29 │ export { Popover, PopoverTrigger, PopoverContent }
    ·                                   ───────┬──────
    ·                                          ╰── previous exported here
 30 │ import * as React from "react"
 31 │ import * as PopoverPrimitive from "@radix-ui/react-popover"
 32 │ 
 33 │ import { cn } from "@/lib/utils"
 34 │ 
 35 │ const Popover = PopoverPrimitive.Root
 36 │ 
 37 │ const PopoverTrigger = PopoverPrimitive.Trigger
 38 │ 
 39 │ const PopoverContent = React.forwardRef<
 40 │   React.ElementRef<typeof PopoverPrimitive.Content>,
 41 │   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
 42 │ >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
 43 │   <PopoverPrimitive.Portal>
 44 │     <PopoverPrimitive.Content
 45 │       ref={ref}
 46 │       align={align}
 47 │       sideOffset={sideOffset}
 48 │       className={cn(
 49 │         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none animate-in data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 50 │         className
 51 │       )}
 52 │       {...props}
 53 │     />
 54 │   </PopoverPrimitive.Portal>
 55 │ ))
 56 │ PopoverContent.displayName = PopoverPrimitive.Content.displayName
 57 │ 
 58 │ export { Popover, PopoverTrigger, PopoverContent }
    ·                                   ───────┬──────
    ·                                          ╰── exported more than once
    ╰────

Advice:   ☞ Exported identifiers must be unique
/home/runner/workspace/src/components/ui/popover.tsx:4:1
18 |        sideOffset={sideOffset}
19 |        className={cn(
20 |          "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
   |                                                                                                                                                                                                                                                                                                                                            ^
21 |          className
22 |        )}
Click outside, press Esc key, or fix the code to dismiss.
You can also disable this overlay by setting server.hmr.overlay to false in vite.config.ts.